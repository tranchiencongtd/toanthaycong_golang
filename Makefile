# l∆∞u √Ω: g·ªçi scripts t·ª´ th∆∞ m·ª•c /scripts

# L·ªánh Docker
.PHONY: docker-up docker-down docker-build docker-logs docker-clean

# Kh·ªüi ƒë·ªông t·∫•t c·∫£ services
docker-up:
	docker-compose up -d

# D·ª´ng t·∫•t c·∫£ services
docker-down:
	docker-compose down

# Build v√† kh·ªüi ƒë·ªông services
docker-build:
	docker-compose up -d --build

# Xem logs
docker-logs:
	docker-compose logs -f

# D·ªçn d·∫πp t·∫•t c·∫£
docker-clean:
	docker-compose down -v --remove-orphans
	docker system prune -f

# L·ªánh Database
.PHONY: db-migrate db-seed db-reset db-connect migrate-up migrate-down

# K·∫øt n·ªëi t·ªõi PostgreSQL
db-connect:
	docker-compose exec postgres psql -U postgres -d toanthaycong

# Kh·ªüi t·∫°o d·ªØ li·ªáu m·∫´u
db-seed:
	go run cmd/seed/main.go

# Reset database (migration + seed)
db-reset:
	make migrate-up
	make db-seed

# Sao l∆∞u database
db-backup:
	docker-compose exec postgres pg_dump -U postgres toanthaycong > backup.sql

# Kh√¥i ph·ª•c database
db-restore:
	docker-compose exec -T postgres psql -U postgres toanthaycong < backup.sql

# Ch·∫°y database migrations
migrate-up:
	go run cmd/migrate/main.go

# T·∫°o m√£ sqlc
sqlc-generate:
	sqlc generate

# C√†i ƒë·∫∑t sqlc (n·∫øu ch∆∞a c√†i)
install-sqlc:
	go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest

# L·ªánh Development
.PHONY: dev run test deps

# C√†i ƒë·∫∑t dependencies
deps:
	go mod tidy
	go mod download
	go mod download
	go mod tidy
	go mod vendor

# T·∫°o th∆∞ m·ª•c vendor
vendor:
	go mod vendor
	@echo "‚úÖ Vendor directory created with all dependencies"

# X√≥a vendor
clean-vendor:
	rm -rf vendor/
	@echo "üóëÔ∏è Vendor directory removed"

# Ch·∫°y ·ªü ch·∫ø ƒë·ªô development
dev:
	go run cmd/api/main.go

# Ch·∫°y API server
api:
	go run cmd/api/main.go

# Ch·∫°y tests
test:
	go test -v ./...

# Build ·ª©ng d·ª•ng
build:
	go build -o bin/app cmd/_your_app_/main.go

# Thi·∫øt l·∫≠p m√¥i tr∆∞·ªùng development
setup:
	@echo "Setting up development environment..."
	make deps
	make install-sqlc
	@echo "Starting Docker containers..."
	make docker-up
	@echo "Waiting for database to be ready..."
	sleep 10
	@echo "Running migrations..."
	make migrate-up
	@echo "Generating SQL code..."
	make sqlc-generate
	@echo "Setup completed!"

# Setup v·ªõi d·ªØ li·ªáu m·∫´u
setup-with-data:
	@echo "Setting up development environment with sample data..."
	make deps
	make install-sqlc
	@echo "Starting Docker containers..."
	make docker-up
	@echo "Waiting for database to be ready..."
	sleep 10
	@echo "Running migrations..."
	make migrate-up
	@echo "Seeding sample data..."
	make db-seed
	@echo "Generating SQL code..."
	make sqlc-generate
	@echo "‚úÖ Setup completed with sample data!"
